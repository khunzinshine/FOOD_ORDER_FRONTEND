{"ast":null,"code":"var _jsxFileName = \"/home/dell/React&Node/React Course(Udemy)/01-starting-project(S-11)/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: amount\n    };\n  }\n\n  return initialState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, initialState);\n\n  const handleAddItem = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const handleRemoveItem = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartProvider = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: handleAddItem,\n    removeItem: handleRemoveItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartProvider,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"g9UOTpW+R292icGYfQ398yEhEoA=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/dell/React&Node/React Course(Udemy)/01-starting-project(S-11)/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","initialState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","CartProvider","props","cartState","dispatchCart","handleAddItem","handleRemoveItem","cartProvider","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAC3BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EADN,CAA9B;AAGA,UAAMC,gBAAgB,GAAGP,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAAzB;AACA,QAAIK,YAAJ;;AACA,QAAID,gBAAJ,EAAsB;AACpB,YAAME,WAAW,GAAG,EAClB,GAAGF,gBADe;AAElBG,QAAAA,MAAM,EAAEH,gBAAgB,CAACG,MAAjB,GAA0BT,MAAM,CAACI,IAAP,CAAYK;AAF5B,OAApB;AAIAF,MAAAA,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAV,CAAf;AACAW,MAAAA,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;AACD,KAPD,MAOO;AACLD,MAAAA,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACI,IAA1B,CAAf;AACD;;AAED,WAAO;AACLR,MAAAA,KAAK,EAAEW,YADF;AAELV,MAAAA,WAAW,EAAEY;AAFR,KAAP;AAID;;AACD,SAAOd,YAAP;AACD,CAxBD;;AA0BA,MAAMgB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,UAAU,CAACK,WAAD,EAAcH,YAAd,CAA5C;;AAEA,QAAMoB,aAAa,GAAIX,IAAD,IAAU;AAC9BU,IAAAA,YAAY,CAAC;AAAEb,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMY,gBAAgB,GAAIX,EAAD,IAAQ;AAC/BS,IAAAA,YAAY,CAAC;AAAEb,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMY,YAAY,GAAG;AACnBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADE;AAEnBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFJ;AAGnBqB,IAAAA,OAAO,EAAEH,aAHU;AAInBI,IAAAA,UAAU,EAAEH;AAJO,GAArB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMT,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\n\nconst initialState = {\n  items: [],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id,\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: amount,\n    };\n  }\n  return initialState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCart] = useReducer(cartReducer, initialState);\n\n  const handleAddItem = (item) => {\n    dispatchCart({ type: \"ADD\", item: item });\n  };\n\n  const handleRemoveItem = (id) => {\n    dispatchCart({ type: \"REMOVE\", id: id });\n  };\n\n  const cartProvider = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: handleAddItem,\n    removeItem: handleRemoveItem,\n  };\n  return (\n    <CartContext.Provider value={cartProvider}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}